user  nginx;
worker_processes  1;

events {
  worker_connections  1024;
}

http {
  include /etc/nginx/mime.types;
  client_max_body_size 100m;

  fastcgi_buffers 8 16k;
  fastcgi_buffer_size 32k;
  fastcgi_connect_timeout 120s;
  fastcgi_send_timeout 120s;
  fastcgi_read_timeout 120s;
  proxy_read_timeout 120s;

  upstream backend {
    server backend:8000;
  }

  server {
    #server_name localhost;
    listen 80 default_server;
    listen [::]:80 default_server;

    # ssl_certificate     fullchain.pem; # managed by Certbot
    # ssl_certificate_key privkey.pem; # managed by Certbot
    # include             options-ssl-nginx.conf; # managed by Certbot
    # ssl_dhparam         ssl-dhparams.pem; # managed by Certbot
    # ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    # # ssl_ciphers         HIGH:!aNULL:!MD5;
       
    charset utf-8;

    root /dist/;
    # index choose-client.html;

    # frontend
    location / {
      try_files $uri $uri/ @rewrites;
    }

    # location @rewrites {
    #   rewrite ^(.+)$ /choose-client.html last;
    # }

    # backend urls
    location ~ ^/(admin\/|api|docs) {
      proxy_redirect off;
      proxy_pass http://backend;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
    }

    # backend static
    location ~ ^/static/(.*)$ {
      alias /dist/static/$1;
    }

    # Some basic cache-control for static files to be sent to the browser
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
      expires max;
      add_header Pragma public;
      add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }
  }
}
